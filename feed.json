{
    "version": "https://jsonfeed.org/version/1",
    "title": "Constantly Underwhelmed",
    "description": "",
    "home_page_url": "https://www.constantlyunderwhelmed.com",
    "feed_url": "https://www.constantlyunderwhelmed.com/feed.json",
    "user_comment": "",
    "author": {
        "name": "Elio Grieco"
    },
    "items": [
        {
            "id": "https://www.constantlyunderwhelmed.com/posts/a-toast-to-jamstack/",
            "url": "https://www.constantlyunderwhelmed.com/posts/a-toast-to-jamstack/",
            "title": "A Toast to Jamstack",
            "summary": "While most websites have gotten extremely complicated and bloated over the last 15 years, it’s still possible to create a site that is fast, small, and secure by default. Jamstack is a combination of JavaScript, APIs and Markup that can be used to make a&hellip;",
            "content_html": "<p>While most websites have gotten extremely complicated and bloated over the last 15 years, it’s still possible to create a site that is fast, small, and secure by default. <a href=\"https://jamstack.org/\">Jamstack</a> is a combination of JavaScript, APIs and Markup that can be used to make a static website with dynamic features provided by third party services.</p><p>There are plenty of <a href=\"https://jamstack.org/generators/\">Static Site Generators (SSG)</a> (355 listed when this was published) that can help build your site in pretty much every imaginable language. And there are also a number of <a href=\"https://jamstack.org/headless-cms/\">Headless CMSs</a> that can be used to make editing of the site content easy for non-software-developers.</p><h2 id=\"publii\">Publii</h2>\n<p>One of the easiest SSGs is <a href=\"https://getpublii.com/\">Publii</a>. It’s a free, open source, and local first program that runs on your machine. It’s excellent for non-technical users or those wanting a graphical way to edit their content. This blog is currently created using Publii since I wanted to give it a good test.</p><p>The biggest drawback is integration with other programs. Publii does not yet allow post-build scripts to be run automatically. It does have a plugin system, but building a Publii plugin is more suited to software developers than average users. Though there are some nice plugins available already.</p><h2 id=\"soupault\">Soupault</h2>\n<p>On the other end of the spectrum is <a href=\"https://soupault.app/\">Soupault</a>. It is by far the most flexible and powerful SSG that I’ve ever used, my current experience being Jekyll, Nanoc, Middleman, and Zola. (And long ago WordPress…but we won’t talk of such horrors here.)</p><p>Soupault has a unique philosophy of “modify HTML with HTML” that makes it incredibly powerful. With most SSGs at some point you start running into the wall of how they were intended to be used vs. what you need them to do. Soupault can be extended in virtually any way you can imagine.</p><h2 id=\"other-ssgs\">Other SSGs</h2>\n<ul>\n<li><a href=\"https://jekyllrb.com/\">Jekyll</a></li>\n<li><a href=\"https://nanoc.app/\">Nanoc</a></li>\n<li><a href=\"https://middlemanapp.com/\">Middleman</a></li>\n<li><a href=\"https://www.getzola.org/\">Zola</a></li>\n</ul>\n<h2 id=\"other-tools\">Other Tools</h2>\n<p><a href=\"https://crates.io/crates/statical\">Statical</a> is a calendar generator for static sites. It is intended to be used in a “Static Site Generator chain” (<a href=\"https://cloudcannon.com/blog/introducing-pagefind/#our-solution%3A-pagefind\">credit to CloudCannon for the term</a>). An example chain might look like the following:</p><ol>\n<li>soupault (or your favorite static site generator)</li>\n<li>statical</li>\n<li>Pagefind (or tinysearch, stork, orama, or similar)</li>\n<li>Jampack</li>\n<li>deploy or sync your site</li>\n</ol>\n<h2 id=\"other-ssg-chain-tools\">Other SSG Chain Tools</h2>\n<h3 id=\"static-site-search\">Static Site Search</h3>\n<ul>\n<li><a href=\"https://pagefind.app/\">Pagefind</a></li>\n<li><a href=\"https://github.com/tinysearch/tinysearch\">tinysearch</a></li>\n<li><a href=\"https://github.com/jameslittle230/stork\">stork</a></li>\n<li><a href=\"https://github.com/askorama/orama\">orama</a></li>\n</ul>\n<h3 id=\"static-site-optimization\">Static Site Optimization</h3>\n<ul>\n<li><a href=\"https://jampack.divriots.com/\">Jampack</a></li>\n</ul>\n",
            "author": {
                "name": "Elio Grieco"
            },
            "tags": [
                   "static websites",
                   "small web",
                   "jamstack"
            ],
            "date_published": "2024-09-17T21:47:31-07:00",
            "date_modified": "2024-09-18T17:54:37-07:00"
        },
        {
            "id": "https://www.constantlyunderwhelmed.com/posts/mars-barred/",
            "url": "https://www.constantlyunderwhelmed.com/posts/mars-barred/",
            "title": "Mars Barred",
            "summary": "On what type of timeframe were you imagining that the shoebox of lichen you send to Mars was going to transform Frozen Airless Radioactive Desert Hell into a place where people could grow wheat? People have this idea that life is like some kind of&hellip;",
            "content_html": "<blockquote>\n<p>On what type of timeframe were you imagining that the shoebox of lichen you send to Mars was going to transform Frozen Airless Radioactive Desert Hell into a place where people could grow wheat?</p><p>People have this idea that life is like some kind of magical force; that the reason Mars does not have life is that life has not yet gone there; that once life goes to a place, then it just figures out how to go on living there. This, I think, is a consequence of more people having gotten their science education from the movie character Ian Malcolm than from actual science classes. More generously, it is a testament to humans having formulated nearly all of their ideas about the nature of life from the absolute easiest (and only known) place to have life.</p></blockquote>\n<p>Source: <a href=\"https://defector.com/neither-elon-musk-nor-anybody-else-will-ever-colonize-mars\">Neither Elon Musk Nor Anybody Else Will Ever Colonize Mars</a></p><p>And <a href=\"https://www.youtube.com/watch?v=JDh2QTYYA6o\">The Mars crisis, explained by 2 experts</a> covers even more reasons that we’re not going to Mars (from the writers of <a href=\"https://www.smbc-comics.com/\">Saturday Morning Breakfast Cereal Comics</a>).</p>",
            "author": {
                "name": "Elio Grieco"
            },
            "tags": [
                   "space travel",
                   "mars",
                   "cold showers"
            ],
            "date_published": "2024-09-13T03:23:28-07:00",
            "date_modified": "2024-09-13T03:26:06-07:00"
        },
        {
            "id": "https://www.constantlyunderwhelmed.com/posts/hard-vs-easy-languages/",
            "url": "https://www.constantlyunderwhelmed.com/posts/hard-vs-easy-languages/",
            "title": "Hard vs Easy Languages",
            "summary": "Rust/Haskell/OCaml/Idris/et. al. are “hard” because they force you to understand the whole problem you are solving with your code. “Easy” languages are generally easy because they let you do stupid things that you or your users will pay for at runtime.",
            "content_html": "<p><a href=\"https://www.rust-lang.org/\">Rust</a>/<a href=\"https://www.haskell.org/\">Haskell</a>/<a href=\"https://ocaml.org/\">OCaml</a>/<a href=\"https://www.idris-lang.org/\">Idris</a>/et. al. are <strong>“hard”</strong> because they force you to understand the whole problem you are solving with your code. <strong>“Easy”</strong> languages are generally easy because they let you do stupid things that you or your users will pay for at runtime.</p>",
            "author": {
                "name": "Elio Grieco"
            },
            "tags": [
                   "type systems",
                   "runtime errors",
                   "programming languages"
            ],
            "date_published": "2022-10-23T14:41:00-07:00",
            "date_modified": "2024-09-08T22:59:24-07:00"
        },
        {
            "id": "https://www.constantlyunderwhelmed.com/posts/more-training/",
            "url": "https://www.constantlyunderwhelmed.com/posts/more-training/",
            "title": "More Training",
            "summary": "This quote applies equally well to cybersecurity, software design, and the broader tech industry: The insight that “Every system is perfectly designed to get the results it gets,” together with its corollary, “If we keep doing what we’ve been doing, we’ll keep getting what we’ve&hellip;",
            "content_html": "<p>This quote applies equally well to cybersecurity, software design, and the broader tech industry:</p><blockquote>\n<p>The insight that “Every system is perfectly designed to get the results it gets,” together with its corollary, “If we keep doing what we’ve been doing, we’ll keep getting what we’ve been getting,” provide profound insight for mitigating the problem of unwarranted practice variation. Healthcare leaders too often identify “re-education” as a solution to a multitude of problems. <strong>A solution like “re-education” rests on the assumption that the system itself is not the problem. Without changing the causal system, the leaders will likely find that a need for “re-education” keeps recurring.</strong> Among the sample of ideas presented for what to do differently to mitigate unwarranted practice variation: In general, design systems so that doing the right thing is the easiest way to do the work; a checklist is one example. Confirm that assumed processes indeed exist and unfold predictably and within desired limits.</p></blockquote>\n<p><a href=\"https://link.springer.com/chapter/10.1007/978-3-030-94655-5_19\">Source</a>: Schulman, J. (2022). “Every System Is Perfectly Designed to Get the Results It Gets”. In: Schulman, J. (eds) The Problem of Practice Variation in Newborn Medicine. Springer, Cham. <a href=\"https://doi.org/10.1007/978-3-030-94655-5_19\">https://doi.org/10.1007/978-3-030-94655-5_19</a></p>",
            "author": {
                "name": "Elio Grieco"
            },
            "tags": [
                   "training",
                   "systems thinking",
                   "cybersecurity"
            ],
            "date_published": "2022-10-20T08:46:00-07:00",
            "date_modified": "2024-09-08T22:56:51-07:00"
        }
    ]
}
